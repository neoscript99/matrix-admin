buildscript {
    repositories {
        mavenLocal()
        maven { url 'https://maven.aliyun.com/repository/public/' }
        maven { url 'https://maven.aliyun.com/repository/gradle-plugin' }
        mavenCentral()
        jcenter()
    }
}

plugins {
    //plugins id 参数不能加gradle.properties变量
    id 'org.springframework.boot' version '2.2.1.RELEASE'
    id 'io.spring.dependency-management' version '1.0.10.RELEASE'
    id 'groovy'
    id 'java-library'

    id 'maven-publish'
    id "com.jfrog.bintray" version "1.8.4"
}

group = 'com.feathermind.matrix'
version = '1.6.7-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
    mavenLocal()
    maven { url 'https://maven.aliyun.com/repository/public/' }
    maven { url 'https://maven.aliyun.com/repository/grails-core/' }
    maven { url 'https://maven.aliyun.com/repository/spring/' }
    maven { url 'https://maven.aliyun.com/repository/google/' }
    mavenCentral()
    jcenter()
    maven { url "https://repo.grails.org/grails/core" }
    maven { url "https://repo.gradle.org/gradle/libs-releases-local/" }
}

dependencies {
    api "org.grails:gorm-hibernate5-spring-boot:7.0.4.RELEASE"
    implementation "org.hibernate:hibernate-core"
    implementation "org.hibernate:hibernate-ehcache"
    implementation "com.h2database:h2"
    implementation 'com.alibaba:druid-spring-boot-starter:1.2.4'

    api 'org.springframework.boot:spring-boot-starter-logging'
    api 'org.springframework.boot:spring-boot-starter-web'
    api 'org.flywaydb:flyway-core'
    //devtools存在Domain Class加载多次问题
    //https://github.com/grails/grails-data-mapping/issues/970
    //developmentOnly 'org.springframework.boot:spring-boot-devtools'

    implementation 'net.unicon.cas:cas-client-autoconfig-support:2.2.0-GA'
    api 'cn.hutool:hutool-all:5.0.3'
    implementation 'org.apache.poi:poi-ooxml:3.16'
    implementation 'com.baomidou:kaptcha-spring-boot-starter:1.1.0'
    implementation 'com.auth0:java-jwt:3.8.2'
    //支持jdk8.LocalDateTime等类型
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
    //支持xml解析
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-xml'

    implementation 'org.projectlombok:lombok:1.18.16'
    annotationProcessor 'org.projectlombok:lombok:1.18.16'
    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

    def gradleVersion = '5.6.4'
    testImplementation group: 'org.gradle', name: 'gradle-core', version: gradleVersion
    testImplementation group: 'org.gradle', name: 'gradle-core-api', version: gradleVersion
    testImplementation group: 'org.gradle', name: 'gradle-tooling-api', version: gradleVersion
    testImplementation group: 'org.gradle', name: 'gradle-plugins', version: gradleVersion
    testImplementation group: 'org.gradle', name: 'gradle-base-services', version: gradleVersion
    testImplementation group: 'org.gradle', name: 'gradle-base-services-groovy', version: gradleVersion

    testImplementation("org.spockframework:spock-spring:1.3-groovy-2.5")
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
}

bootRun {
    jvmArgs('-Dspring.output.ansi.enabled=always')
    systemProperty 'spring.profiles.active', 'dev'
    systemProperty 'init', 'true'
    systemProperties System.properties
}

task sourceJar(type: Jar) {
    from(sourceSets.main.allSource, sourceSets.test.allSource)
}
jar {
    enabled = true
}
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact sourceJar {
                classifier "sources"
            }
        }
    }
}

bintray {
    user = project.hasProperty('bintrayUser') ? project.property('bintrayUser') : System.getenv('BINTRAY_USER')
    key = project.hasProperty('bintrayApiKey') ? project.property('bintrayApiKey') : System.getenv('BINTRAY_API_KEY')

    publications = ['mavenJava']
    pkg {
        repo = 'maven'
        name = project.name
        licenses = ['Apache-2.0']
        issueTrackerUrl = 'https://github.com/neoscript99/matrix-admin/issues'
        websiteUrl = 'https://github.com/neoscript99/matrix-admin.git'
        vcsUrl = 'https://github.com/neoscript99/matrix-admin'
        publicDownloadNumbers = true
        version {
            name = project.version
            desc = "$project.name $project.version"
            released = new Date()
            vcsTag = "v$project.version"
        }
    }
}
